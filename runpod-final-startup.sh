#!/bin/bash

# RunPod Final Startup Script
# Opravuje probl√©m s concurrently a Tailwind CSS

set -e  # Exit on any error

echo "üöÄ LoRA Style Transfer - Final Startup (v2.0.0)"
echo "============================================="

# Nastaven√≠ promƒõnn√Ωch
REPO_URL="https://github.com/marelhott/Lora-Style-Transfer-TRAE.git"
APP_DIR="/workspace/app"
DATA_DIR="/data"

# Funkce pro logov√°n√≠
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üîÑ Setting up application..."

# Clone nebo pull repository
cd /workspace
if [ -d "$APP_DIR" ]; then
    log "üìÇ Application directory exists, pulling latest changes..."
    cd "$APP_DIR"
    git fetch origin
    git reset --hard origin/main
    git pull origin main
else
    log "üì• Cloning repository..."
    git clone "$REPO_URL" "$APP_DIR"
    cd "$APP_DIR"
fi

log "‚úÖ Repository updated successfully"

# Nastav Python environment
if [ -d "$DATA_DIR/python-packages" ]; then
    log "üêç Using cached Python packages from persistent storage..."
    export PYTHONPATH="$DATA_DIR/python-packages:$PYTHONPATH"
else
    log "‚ö†Ô∏è  No cached Python packages found"
fi

# Nastav Node modules - v≈ædy reinstall pro jistotu
log "üì¶ Installing Node modules with all required dependencies..."

# V≈ædy reinstall pro jistotu ≈æe m√°me v≈°echny dependencies
log "üì¶ Fresh npm install to ensure all dependencies..."
npm install

# Zkontroluj a doinstaluj chybƒõj√≠c√≠ Tailwind dependencies
log "üé® Ensuring Tailwind CSS dependencies..."
if [ ! -f "node_modules/.bin/tailwindcss" ]; then
    log "üì¶ Installing missing Tailwind CSS..."
    npm install -D tailwindcss postcss autoprefixer
fi

# Zkontroluj concurrently
if [ ! -f "node_modules/.bin/concurrently" ]; then
    log "üì¶ Installing missing concurrently..."
    npm install -D concurrently
fi

# Ovƒõ≈ô ≈æe v≈°echny tools jsou dostupn√©
log "üîç Verifying tools availability..."
if [ -f "node_modules/.bin/concurrently" ]; then
    log "‚úÖ concurrently is available"
else
    log "‚ùå concurrently still missing"
fi

if [ -f "node_modules/.bin/tailwindcss" ]; then
    log "‚úÖ tailwindcss is available"
else
    log "‚ùå tailwindcss still missing"
fi

if [ -f "node_modules/.bin/next" ]; then
    log "‚úÖ next is available"
else
    log "‚ùå next still missing"
fi

# Zkop√≠ruj node_modules na /data pro p≈ô√≠≈°tƒõ (pokud se poda≈ôilo)
if [ -f "node_modules/.bin/concurrently" ] && [ -f "node_modules/.bin/tailwindcss" ]; then
    log "üíæ Caching node_modules to persistent storage..."
    mkdir -p "$DATA_DIR"
    cp -r node_modules "$DATA_DIR/" 2>/dev/null || true
fi

# Nastav environment variables
export MODEL_PATH="$DATA_DIR/models"
export NODE_ENV="development"

log "üåç Environment variables set:"
log "   PYTHONPATH=$PYTHONPATH"
log "   MODEL_PATH=$MODEL_PATH"
log "   NODE_ENV=$NODE_ENV"

# Vytvo≈ô pot≈ôebn√© adres√°≈ôe
mkdir -p "$DATA_DIR/models"
mkdir -p "/tmp/processing"

# Spus≈• aplikaci
log "üöÄ Starting LoRA Style Transfer application..."
log "   Frontend: http://localhost:3000"
log "   Backend API: http://localhost:8000"

# Spus≈• v development mode
log "üîß Starting with concurrently..."
npm run dev &
NEXT_PID=$!

# Poƒçkej na spu≈°tƒõn√≠
sleep 15

log "‚úÖ Application started successfully!"
log "üåê Access your app at the RunPod provided URL"
log "üìä Monitoring processes..."

# Monitor proces≈Ø
while true; do
    if ! kill -0 $NEXT_PID 2>/dev/null; then
        log "‚ùå Application process died, restarting..."
        npm run dev &
        NEXT_PID=$!
    fi
    
    sleep 30
done